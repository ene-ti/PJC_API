unit u00_SetupINI;

interface

uses
  Windows, SysUtils, Classes, Graphics, Forms, Dialogs,
   StdCtrls, Controls, ExtCtrls, //AppEvent,
  IniFiles, Mask, //ToolEdit,
  CheckLst, //IBOServices,
  Buttons, Vcl.ComCtrls,

  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error,
  FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool,
  FireDAC.Stan.Async, FireDAC.Phys, {FireDAC.VCLUI.Wait,} Data.DB,
  FireDAC.Comp.Client, FireDAC.Phys.FBDef, FireDAC.Phys.IBBase, FireDAC.Phys.FB;

type
  TfrmSetupINI = class(TForm)
    gb1SFCOKE: TGroupBox;
    edNomeServerSFCOKE: TLabeledEdit;
    gb3SFCOKEAux: TGroupBox;
    pn4Rodape: TPanel;
    btnGrava: TBitBtn;
    edDatabaseSFCOKE: TLabeledEdit;
    edUsernameSFCOKE: TLabeledEdit;
    edPasswordSFCOKE: TLabeledEdit;
    edNomeServerSFCOKEAUX: TLabeledEdit;
    edDatabaseSFCOKEAUX: TLabeledEdit;
    edUsernameSFCOKEAUX: TLabeledEdit;
    edPasswordSFCOKEAUX: TLabeledEdit;
    btnTeste: TBitBtn;
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    pnRodape: TPanel;
    btnSair: TBitBtn;
    procedure FormCreate(Sender: TObject);
    procedure btnGravaClick(Sender: TObject);
    procedure btnSairClick(Sender: TObject);
    procedure btnTesteClick(Sender: TObject);
  private
    { Private declarations }
  public
    Procedure CarregaVersaoAtual;
  end;

var
  frmSetupINI: TfrmSetupINI;
  vNomeArqIni : String;

implementation

uses u00_Global, u00_FunPro;

{$R *.DFM}

procedure TfrmSetupINI.FormCreate(Sender: TObject);
var
  vArqIni : TextFile;
begin
  vNomeArqIni := vgPathAplicacao + C_nome_Arq_Ini;

  if not FileExists(vNomeArqIni) then
  begin
    AssignFile(vArqIni, vNomeArqIni);
    Rewrite(vArqIni);

    writeln(vArqIni,'*********************************************************************');
    writeln(vArqIni,'** Inicio do arquivo                                              ***');
    writeln(vArqIni,'** Arquivo com confiruações Iniciais de conexões                  ***');
    writeln(vArqIni,'** SFCOKEAUX - App Auxiliar de processos do SFCOKE (Ctrl Ponto)   ***');
    writeln(vArqIni,'*********************************************************************');
    writeln(vArqIni,'[BancoDados-Origem-SFCOKE]                                           ');
    writeln(vArqIni,'NomeServerSFCOKE=                                       ');
    writeln(vArqIni,'DatabaseSFCOKE=                                                ');
    writeln(vArqIni,'UsernameSFCOKE=                                                ');
    writeln(vArqIni,'PasswordSFCOKE=                                    ');
    writeln(vArqIni,'                                                                     ');
    writeln(vArqIni,'[BancoDados-Origem-RM]                                           ');
    writeln(vArqIni,'NomeServerRM=                                       ');
    writeln(vArqIni,'DatabaseRM=                                                ');
    writeln(vArqIni,'UsernameRM=                                                ');
    writeln(vArqIni,'PasswordRM=                                    ');
    writeln(vArqIni,'                                                                     ');
    writeln(vArqIni,'[BancoDados-Destino-SFCOKEAUX]                                       ');
    writeln(vArqIni,'NomeServerSFCOKEAUX=                                    ');
    writeln(vArqIni,'DatabaseSFCOKEAUX=                                             ');
    writeln(vArqIni,'UsernameSFCOKEAUX=                                             ');
    writeln(vArqIni,'PasswordSFCOKEAUX=                                 ');
    writeln(vArqIni,'                                                                     ');
    writeln(vArqIni,'[Pasta-Exportacao-Auto]                                       ');
    writeln(vArqIni,'NomePastaAutomatica=                                    ');
    writeln(vArqIni,'                                                                     ');
    writeln(vArqIni,'*********************************************************************');
    writeln(vArqIni,'** Fim do arquivo                                                  **');
    writeln(vArqIni,'*********************************************************************');

    Flush(vArqIni);
    CloseFile(vArqIni);
  end;

  CarregaVersaoAtual;
end;

Procedure TfrmSetupINI.CarregaVersaoAtual;
var
  vDir : String;
begin

  edNomeServerSFCOKE.Text    := AchaParametro('BancoDados-Origem-SFCOKE','NomeServerSFCOKE');
  edDatabaseSFCOKE.Text      := AchaParametro('BancoDados-Origem-SFCOKE','DatabaseSFCOKE');
  edUsernameSFCOKE.Text      := Crypto('D', AchaParametro('BancoDados-Origem-SFCOKE','UsernameSFCOKE'));
  edPasswordSFCOKE.Text      := Crypto('D', AchaParametro('BancoDados-Origem-SFCOKE','PasswordSFCOKE'));

  edNomeServerSFCOKEAUX.Text := AchaParametro('BancoDados-Destino-SFCOKEAUX','NomeServerSFCOKEAUX');
  edDatabaseSFCOKEAUX.Text   := AchaParametro('BancoDados-Destino-SFCOKEAUX','DatabaseSFCOKEAUX');
  edUsernameSFCOKEAUX.Text   := Crypto('D', AchaParametro('BancoDados-Destino-SFCOKEAUX','UsernameSFCOKEAUX'));
  edPasswordSFCOKEAUX.Text   := Crypto('D', AchaParametro('BancoDados-Destino-SFCOKEAUX','PasswordSFCOKEAUX'));

end;


procedure TfrmSetupINI.btnGravaClick(Sender: TObject);
var
  vIni : TIniFile;
begin
 try
  try
   vIni  := TiniFile.Create(vNomeArqIni);

   vIni.WriteString('BancoDados-Origem-SFCOKE','NomeServerSFCOKE',edNomeServerSFCOKE.Text);
   vIni.WriteString('BancoDados-Origem-SFCOKE','DatabaseSFCOKE',  edDatabaseSFCOKE.Text);
   vIni.WriteString('BancoDados-Origem-SFCOKE','UsernameSFCOKE',  Crypto('C', edUsernameSFCOKE.Text));
   vIni.WriteString('BancoDados-Origem-SFCOKE','PasswordSFCOKE',  Crypto('C', edPasswordSFCOKE.Text));

   vIni.WriteString('BancoDados-Destino-SFCOKEAUX','NomeServerSFCOKEAUX',edNomeServerSFCOKEAUX.Text);
   vIni.WriteString('BancoDados-Destino-SFCOKEAUX','DatabaseSFCOKEAUX',  edDatabaseSFCOKEAUX.Text);
   vIni.WriteString('BancoDados-Destino-SFCOKEAUX','UsernameSFCOKEAUX',  Crypto('C', edUsernameSFCOKEAUX.Text));
   vIni.WriteString('BancoDados-Destino-SFCOKEAUX','PasswordSFCOKEAUX',  Crypto('C', edPasswordSFCOKEAUX.Text));

   vIni.Free;
  except
    on E: Exception do
    begin
      MessageDlg('Atencao!!! Erro ao GRAVAR o arquivo:' + #13#13 +
        vNomeArqIni + #13#13 +
        E.Message + #13#13 +
        'Verifique.', MTERROR, [MBOK], 0);
    end;
  end;
 finally
    MessageDlg('Arquivo salvo com sucesso. <OK> para continuar.', mtInformation, [mbOk], 0);
    CarregarVariaveisIniciais;
    btnSair.Click;
 end;
end;

procedure TfrmSetupINI.btnSairClick(Sender: TObject);
begin
  frmSetupINI.Close;
end;

procedure TfrmSetupINI.btnTesteClick(Sender: TObject);
var
  FDConexao: TFDConnection;
begin
  CarregarVariaveisIniciais;

  FDConexao := TFDConnection.Create(nil);
  try
    FDConexao.ConnectionDefName := NOME_CONEXAO_BD;


//    if CountDelete = 0 then
      raise EDatabaseError.Create('Nenhum produto foi excluido!');
  finally
    FDConexao.Free;
  end;

 // if dmConexaoDados.ConectaDestSFCOKEAUX then
  begin
    MessageDlg('Teste de conexão:'                          + #13#13 +
       ' [BancoDados-Destino-SFCOKEAUX]'                    + #13    +
       ' -> NomeServerSFCOKEAUX = ' + vgNomeServerSFCOKEAUX + #13    +
       ' -> DatabaseSFCOKEAUX = '   + vgDatabaseSFCOKEAUX   + #13#13 +
       ' Efetuado com Sucesso.', mtInformation, [mbOK], 0);
  end;
//  else
  begin
    MessageDlg('Atenção!!! Teste de conexão:'               + #13#13 +
       ' [BancoDados-Destino-SFCOKEAUX]'                    + #13    +
       ' -> NomeServerSFCOKEAUX = ' + vgNomeServerSFCOKEAUX + #13    +
       ' -> DatabaseSFCOKEAUX = '   + vgDatabaseSFCOKEAUX   + #13#13 +
       'Com erro!', mtError, [mbOK], 0);
  end;


end;


end.


